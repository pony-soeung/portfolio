{
  "parser": "babel-eslint",
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "prettier"
  ],
  "plugins": [
    "flowtype",
    "react-hooks",
    "prettier"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "rules": {
    "prettier/prettier": [
      "error"
    ],
    "no-console": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    // Required for our dynamic CSS theming => require(`./Button.${_BRAND_}.scss`);
    "import/no-dynamic-require": 0,
    // We use the 'import' plugin which allows for cases "flow" awareness.
    "no-duplicate-imports": 0,
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off",
    // allow jsx syntax in js files (for next.js project)
   "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }], //should add ".ts" if typescript project
    // This rule struggles with flow and class properties.
    "react/sort-comp": 0,
    // We use global requires in various places, e.g. code splitting instances.
    "global-require": 0,
    // We use development dependencies (as react-test-renderer) in unit tests
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.spec.js"
        ]
      }
    ],
    // Checks for existence of documentation
    "require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true,
          "ArrowFunctionExpression": true
        }
      }
    ],
    // We can't guess what our object contains
    "react/forbid-prop-types": [
      0,
      {
        "forbid": [
          "object"
        ]
      }
    ],
    // Interfere with prettier on save
    "no-debugger": 0,
    // Need adjustements
    "function-paren-newline": 0,
    // Need adjustements
    "react/default-props-match-prop-types": 0,
    // Need adjustements
    "object-curly-newline": [
      "error",
      {
        "multiline": true,
        "consistent": true
      }
    ],
    // Need adjustements
    "jsx-a11y/anchor-is-valid": 0,
    "jsx-a11y/label-has-for": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/mouse-events-have-key-events": 0,
    "react/jsx-one-expression-per-line": 0,
    "import/no-cycle": 0,
    "react/no-unused-prop-types": 0,
    "react/destructuring-assignment": 0,
    "react/require-default-props": 0,
    "react/no-access-state-in-setstate": 0,
    "react/button-has-type": 0,
    // Need adjustements too
    "react/jsx-props-no-spreading": 0,
    "react/jsx-fragments": 0,
    "react/static-property-placement": 0,
    "react/state-in-constructor": 0,
    "jsx-a11y/control-has-associated-label": 0,
    "react/jsx-curly-newline": 0,
    // Strange
    "react/no-this-in-sfc": 0
  },
  "globals": {
    // Following are symbols from testing libraries
    "afterEach": false,
    "beforeEach": false,
    "afterAll": false,
    "beforeAll": false,
    "describe": false,
    "it": false,
    "expect": false,
    "assert": false,
    "jest": false,
    "jsdom": false,
    "browser": false,
    "localStorage": false,
    "sessionStorage": false,
    // Following are symbols for css modules
    "_BRAND_": false,
    "__THEME__": false,
    // Google API object
    "google": false,
    "ga": false
  }
}
